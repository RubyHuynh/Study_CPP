
#include <iostream>
#include <vector>

int main ()
{
        std::vector<int*> myvector;
        for (int i=1; i<=5; i++) myvector.push_back(new int);

        typedef std::vector<int*>::const_iterator const_obj_iter;
        std::pair<const_obj_iter,const_obj_iter> pp = std::make_pair( myvector.begin(), myvector.end() );

        int* tmp;
        std::cout << ' ' << *(pp.first) << "\n";
        while (pp.first != pp.second) {
                ++(pp.first);
                if(pp.first == pp.second) std::cout<<"nek\n";
                tmp = *(pp.first);
                std::cout << ' ' << *(pp.first) << "\n";
        }

        std::cout << "\n\n" << *tmp;

        return 0;
}

/*

0
u18@u18-VirtualBox:~/temo$ ulimit -c unlimited
u18@u18-VirtualBox:~/temo$ ./a.out
 0x5610496cfe70
 0x5610496cfeb0
 0x5610496cfe90
 0x5610496cfed0
 0x5610496cff20
nek
 0


Segmentation fault (core dumped)

Core was generated by `./a.out'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000561049268ea5 in main () at vector_invalid.cpp:21
21		std::cout << "\n\n" << *tmp;
(gdb) pvector myvector
elem[0]: $1 = (int *) 0x5610496cfe70
elem[1]: $2 = (int *) 0x5610496cfeb0
elem[2]: $3 = (int *) 0x5610496cfe90
elem[3]: $4 = (int *) 0x5610496cfed0
elem[4]: $5 = (int *) 0x5610496cff20
Vector size = 5
Vector capacity = 8
Element type = std::_Vector_base<int*, std::allocator<int*> >::pointer


 */
